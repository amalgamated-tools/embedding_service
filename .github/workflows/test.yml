name: Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.13", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        # Install project dependencies including dev dependencies for testing
        uv sync --all-extras
    
    - name: Run tests
      run: |
        uv run pytest test_main.py test_embedding_service.py -v --tb=short
      env:
        # Prevent model downloads during testing
        HF_HUB_OFFLINE: 1
        TRANSFORMERS_OFFLINE: 1
        # Set test environment variables
        EMBEDDING_MODEL: all-mpnet-base-v2
        SIMILARITY_THRESHOLD: 0.70
    
    - name: Generate coverage report
      if: matrix.python-version == '3.13'  # Only generate coverage for primary Python version
      run: |
        uv run pytest test_main.py test_embedding_service.py --cov=. --cov-report=term-missing --cov-report=xml
      env:
        HF_HUB_OFFLINE: 1
        TRANSFORMERS_OFFLINE: 1
        EMBEDDING_MODEL: all-mpnet-base-v2
        SIMILARITY_THRESHOLD: 0.70
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.13' && success()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false