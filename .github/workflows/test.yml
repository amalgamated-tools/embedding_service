name: Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.12"]  # Use 3.12 as primary, since 3.13 might not be available on all runners
        include:
          - python-version: "3.13"
            allow-failure: true  # Allow 3.13 to fail if not available
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}-${{ matrix.python-version }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install main dependencies
        pip install fastapi>=0.116.1 numpy>=2.3.3 redis>=6.4.0 uvicorn>=0.35.0
        # Install sentence-transformers for mocking (required for @patch decorators)
        pip install sentence-transformers>=5.1.0
        # Install test dependencies
        pip install pytest>=8.0.0 pytest-asyncio>=0.21.0 httpx>=0.24.0
    
    - name: Run tests
      run: |
        python -m pytest test_main.py test_embedding_service.py -v --tb=short
      env:
        # Prevent model downloads during testing
        HF_HUB_OFFLINE: 1
        TRANSFORMERS_OFFLINE: 1
        # Set test environment variables
        EMBEDDING_MODEL: all-mpnet-base-v2
        SIMILARITY_THRESHOLD: 0.70
    
    - name: Generate coverage report
      if: matrix.python-version == '3.12'  # Only generate coverage for one Python version
      run: |
        pip install pytest-cov
        python -m pytest test_main.py test_embedding_service.py --cov=. --cov-report=term-missing --cov-report=xml
      env:
        HF_HUB_OFFLINE: 1
        TRANSFORMERS_OFFLINE: 1
        EMBEDDING_MODEL: all-mpnet-base-v2
        SIMILARITY_THRESHOLD: 0.70
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12' && success()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false